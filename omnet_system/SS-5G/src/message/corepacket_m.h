//
// Generated file, do not edit! Created by nedtool 5.6 from message/corepacket.msg.
//

#ifndef __COREPACKET_M_H
#define __COREPACKET_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>message/corepacket.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet CorePacket
 * {
 *     int type;
 *     int bsSimId;
 *     int ueSimId;
 *     double bsX;
 *     double bsY;
 *     double bsZ;
 *     double ueX;
 *     double ueY;
 *     double ueZ;
 *     double arriveTime;
 *     double timeStamp;
 * }
 * </pre>
 */
class CorePacket : public ::omnetpp::cPacket
{
  protected:
    int type;
    int bsSimId;
    int ueSimId;
    double bsX;
    double bsY;
    double bsZ;
    double ueX;
    double ueY;
    double ueZ;
    double arriveTime;
    double timeStamp;

  private:
    void copy(const CorePacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CorePacket&);

  public:
    CorePacket(const char *name=nullptr, short kind=0);
    CorePacket(const CorePacket& other);
    virtual ~CorePacket();
    CorePacket& operator=(const CorePacket& other);
    virtual CorePacket *dup() const override {return new CorePacket(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getType() const;
    virtual void setType(int type);
    virtual int getBsSimId() const;
    virtual void setBsSimId(int bsSimId);
    virtual int getUeSimId() const;
    virtual void setUeSimId(int ueSimId);
    virtual double getBsX() const;
    virtual void setBsX(double bsX);
    virtual double getBsY() const;
    virtual void setBsY(double bsY);
    virtual double getBsZ() const;
    virtual void setBsZ(double bsZ);
    virtual double getUeX() const;
    virtual void setUeX(double ueX);
    virtual double getUeY() const;
    virtual void setUeY(double ueY);
    virtual double getUeZ() const;
    virtual void setUeZ(double ueZ);
    virtual double getArriveTime() const;
    virtual void setArriveTime(double arriveTime);
    virtual double getTimeStamp() const;
    virtual void setTimeStamp(double timeStamp);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CorePacket& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CorePacket& obj) {obj.parsimUnpack(b);}


#endif // ifndef __COREPACKET_M_H

